//HDU 1233
#include<bits/stdc++.h>
using namespace std;
#define inf 0x3f3f3f3f
#define ll long long
const int maxn=100005;//µãÊý
const int maxm=100005;//±ßÊý
const int mod=1e9+7;
const double eps=1e-8;
const double PI = acos(-1.0);
#define lowbit(x) (x&(-x))
struct edge
{
    ll u,v,w;
} eg[maxm];
ll tot=0,pre[maxn],n,m;
void addedge(ll u,ll v,ll w)
{
    eg[tot].u=u;
    eg[tot].v=v;
    eg[tot++].w=w;
}
bool cmp(edge a,edge b)
{
    return a.w<b.w;
}
ll find(ll x)
{
    if(pre[x]==x)  return x;
    else return pre[x]=find(pre[x]);
}
ll kruskal(ll n)
{
    sort(eg,eg+tot,cmp);
    ll cnt=0,ans=0;
    for(ll i=0; i<tot; i++)
    {
        ll u=eg[i].u,v=eg[i].v,w=eg[i].w;
        ll fu=find(u),fv=find(v);
        if(fu!=fv)
        {
            ans+=w;
            pre[fu]=fv;
            cnt++;
        }
        if(cnt==n-1)    break;
    }
    if(cnt<n-1) return -1;
    else return ans;
}
void init()
{
    tot=0;
    for(ll i=1; i<=n; i++)
        pre[i]=i;
}
int main()
{
    std::ios::sync_with_stdio(false);
    while(cin>>n&&n)
    {
        init();
        for(int i=0; i<n*(n-1)/2; i++)
        {
            ll a,b,c;
            cin>>a>>b>>c;
            addedge(a,b,c);
        }
        cout<<kruskal(n)<<endl;
    }
    return 0;
}
