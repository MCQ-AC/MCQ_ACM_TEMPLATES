MCS求出完美消除序列，倒序处理vn,……,v1的染色，求出最小的没有被vi已染色相邻点（v中排名比它大）取的颜色k，设col[vi]=k即可。
洛谷p3196
#include<bits/stdc++.h>
#define pb push_back
using namespace std;
const int N=10010,M=4e6+10;

int n,m,q[N],f[N],ans,col[N],tg[N];
int head[N],to[M],nxt[M],tot;
vector<int>eg[N];
bool vis[N];

inline void lk(int u,int v)
{
    to[++tot]=v;
    nxt[tot]=head[u];
    head[u]=tot;
}

void MSC()
{
    int i,j,x,y,bst=0;
    for(i=1; i<=n; ++i) lk(0,i);
    for(j=n; j>0; --j)
    {
        for(;;)
        {
            for(int &i=head[bst]; i; i=nxt[i])
                if(!vis[to[i]]) break;
            if(head[bst])
            {
                x=to[head[bst]];
                q[j]=x;
                vis[x]=true;
                for(i=eg[x].size()-1; i>=0; --i) if(!vis[eg[x][i]])
                    {
                        y=eg[x][i];
                        f[y]++;
                        lk(f[y],y);
                        bst=max(bst,f[y]);
                    }
                break;
            }
            else bst--;
        }
    }
}

int main()
{
    int i,j,x,y;
    scanf("%d%d",&n,&m);
    for(i=1; i<=m; ++i)
    {
        scanf("%d%d",&x,&y);
        eg[x].pb(y);
        eg[y].pb(x);
    }
    MSC();
    for(j=n; j>0; --j)
    {
        x=q[j];
        for(i=eg[x].size()-1; i>=0; --i) tg[col[eg[x][i]]]=x;
        for(i=1; tg[i]==x; ++i);
        col[x]=i;
        ans=max(ans,i);
    }
    printf("%d",ans);
    return 0;
}
