//洛谷p4568
//最多选k条边使边权为0，求s到t的最短路
#include<bits/stdc++.h>
using namespace std;
const int inf=0x3f3f3f3f;
const int N=4e6+5;
#define ll long long
struct qnode
{
    int v;
    ll c;
    qnode(int _v=0,int _c=0):v(_v),c(_c){}
    bool operator <(const qnode &r)const
    {
        return c>r.c;
    }
};
struct edge
{
    ll v,cost;
    int next;
};
edge eg[N];
ll head[N],dist[N],tot;
bool vis[N];
void Dijkstra(int n,int sta)
{
    memset(vis,false,sizeof(vis));
    for(int i=0;i<=n;i++)   dist[i]=inf;
    priority_queue<qnode> pq;
    dist[sta]=0;
    pq.push(qnode(sta,0));
    qnode tmp;
    while(!pq.empty())
    {
        tmp=pq.top();
        pq.pop();
        int u=tmp.v;
        if(vis[u])continue;
        vis[u]=true;
        for(int i=head[u];~i;i=eg[i].next)
        {
            int v=eg[i].v;
            ll cost=eg[i].cost;
            if(!vis[v]&&dist[v]>dist[u]+cost)
            {
                dist[v]=dist[u]+cost;
                pq.push(qnode(v,dist[v]));
            }
        }
    }
}
void init()
{
    memset(head,-1,sizeof(head));
    tot=0;
}
void addedge(int u,int v,int w)
{
    eg[tot].v=v;
    eg[tot].cost=w;
    eg[tot].next=head[u];
    head[u]=tot++;
}
int main()
{
    int n,m,k,s,t;
    init();
    scanf("%d%d%d%d%d",&n,&m,&k,&s,&t);
    for(int i=0;i<m;i++)
    {
        ll u,v,w;
        scanf("%lld%lld%lld",&u,&v,&w);
        addedge(u,v,w);
        addedge(v,u,w);
        for(int j=1;j<=k;j++)
        {
            addedge(u+(j-1)*n,v+j*n,0);
            addedge(v+(j-1)*n,u+j*n,0);
            addedge(u+j*n,v+j*n,w);
            addedge(v+j*n,u+j*n,w);
        }
    }
    for(int i=1;i<=k;i++)
    {
        addedge(t+(i-1)*n,t+i*n,0);
    }
    Dijkstra(n*(k+1),s);
    printf("%lld\n",dist[t+n*k]);
    return 0;
}
