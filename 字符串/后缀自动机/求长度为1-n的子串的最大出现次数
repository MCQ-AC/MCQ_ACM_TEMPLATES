//SPOJ NSUBSTR 
/*样例：
Input:
ababa
Output:
3
2
2
1
1
*/
#include<bits/stdc++.h>
using namespace std;
const int maxn=25e4+5;
char s[maxn];
int ans[maxn*2];
int n;
struct Suffix_Automation
{
    int next[maxn*2][26],fa[maxn*2],l[maxn*2],num[maxn*2],right[maxn*2];
    int last,cnt;
    int cntA[maxn*2],A[maxn*2];
    void init()
    {
        last=cnt=1;
        fa[1]=l[1]=0;
        memset(next[1],0,sizeof next[1]);
    }
    int inline newnode()
    {
        cnt++;
        memset(next[cnt],0,sizeof next[cnt]);
        fa[cnt]=l[cnt]=num[cnt]=0;
        return cnt;
    }
    void add(int c)
    {
        int p=last;
        int np=newnode();
        l[np]=l[p]+1;
        last=np;
        while(p&&!next[p][c])
            next[p][c]=np,p=fa[p];
        if(!p)
            fa[np]=1;
        else
        {
            int q=next[p][c];
            if(l[q]==l[p]+1)
                fa[np]=q;
            else
            {
                int nq=++cnt;
                l[nq]=l[p]+1;
                memcpy(next[nq],next[q],sizeof next[q]);
                fa[nq]=fa[q];
                fa[np]=fa[q]=nq;
                num[nq]=num[q];
                while(next[p][c]==q)
                    next[p][c]=nq,p=fa[p];
            }
        }
    }
    void work()
    {
        memset(cntA,0,sizeof cntA);
        for(int i=1; i<=cnt; i++)
            cntA[l[i]]++;
        for(int i=1; i<=n; i++)
            cntA[i]+=cntA[i-1];
        for(int i=1; i<=cnt; i++)
            A[cntA[l[i]]--]=i;
        int p=1;
        for(int i=1; i<=n; i++)
        {
            p=next[p][s[i]-'a'];
            right[p]=1;
        }
        for(int i=cnt; i>=1; i--)
        {
            p=A[i];
            if(fa[p])
                right[fa[p]]+=right[p];
        }
        for(int i=1; i<=cnt; i++)
            ans[l[i]]=max(ans[l[i]],right[i]);
        for(int i=n-1; i>=1; i--)
            ans[i]=max(ans[i],ans[i+1]);
    }
} sam;
int main()
{
    scanf("%s",s+1);
    n=strlen(s+1);
    sam.init();
    for(int i=1; i<=n; i++)
        sam.add(s[i]-'a');
    sam.work();
    for(int i=1; i<=n; i++)
        printf("%d\n",ans[i]);
    return 0;
}
