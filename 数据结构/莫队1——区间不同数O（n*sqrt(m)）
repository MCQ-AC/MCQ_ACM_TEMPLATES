//洛谷p1972
#include<bits/stdc++.h>
using namespace std;
#define inf 0x3f3f3f3f
#define ll long long
#define il inline
#define re register
const int N=1e6+5;
const int mod=1e9+7;
const double eps=1e-8;
const double PI = acos(-1.0);
#define lowbit(x) (x&(-x))
il ll gcd(ll a,ll b)
{
    return b==0?a:gcd(b,a%b);
}
il ll qpow(ll a,ll b)
{
    ll res=1;
    while(b)
    {
        if(b&1) res=res*a%mod;
        a=a*a%mod;
        b>>=1;
    }
    return res;
}
il ll inv(ll a,ll p)
{
    return qpow(a,p-2);
}
//适用于正负数,(int,long long,float,double)
template <class T>
il bool read(T &ret)
{
    char c;
    int sgn;
    T bit=0.1;
    if(c=getchar(),c==EOF) return 0;
    while(c!='-'&&c!='.'&&(c<'0'||c>'9')) c=getchar();
    sgn=(c=='-')?-1:1;
    ret=(c=='-')?0:(c-'0');
    while(c=getchar(),c>='0'&&c<='9') ret=ret*10+(c-'0');
    if(c==' '||c=='\n')
    {
        ret*=sgn;
        return 1;
    }
    while(c=getchar(),c>='0'&&c<='9') ret+=(c-'0')*bit,bit/=10;
    ret*=sgn;
    return 1;
}
il void out(int x)
{
    if(x>9) out(x/10);
    putchar(x%10+'0');
}
int block,ans=0,cnt[N];
int n,m,a[N],Ans[N];

struct node
{
    int l,r,id;
} q[N];

il bool cmp(node a,node b)
{
    return (a.l/block)^(b.l/block)?a.l<b.l:(((a.l/block)&1)?a.r<b.r:a.r>b.r);
}

il void add(int x)
{
    if(!cnt[a[x]])ans++;
    cnt[a[x]]++;
}

il void del(int x)
{
    cnt[a[x]]--;
    if(!cnt[a[x]])ans--;
}
int i;
int main()
{
    read(n);
    for(i=1; i<=n; ++i) read(a[i]);
    read(m);
    block=n/sqrt(m*2/3);
    for(i=1; i<=m; ++i)
    {
        read(q[i].l);
        read(q[i].r);
        q[i].id=i;
    }
    sort(q+1,q+m+1,cmp);
    int l=0,r=0;
    for(i=1; i<=m; ++i)
    {
        int ql=q[i].l,qr=q[i].r;
        while(l<ql)del(l++);
        while(l>ql)add(--l);
        while(r<qr)add(++r);
        while(r>qr)del(r--);
        Ans[q[i].id]=ans;
    }
    for(i=1; i<=m; ++i)out(Ans[i]),printf("\n");
    return 0;
}
