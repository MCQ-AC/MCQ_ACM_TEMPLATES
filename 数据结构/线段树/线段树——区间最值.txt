//HDU 1754
#include<bits/stdc++.h>
using namespace std;
#define inf 0x3f3f3f3f
#define ll long long
const int maxn=200005;
const int mod=1e9+7;
const double eps=1e-8;
const double PI = acos(-1.0);
#define lowbit(x) (x&(-x))
ll gcd(ll a,ll b){return b==0?a:gcd(b,a%b);}
ll qpow(ll a,ll b){ll t=1;while(b){if(b%2){t=(t*a)%mod;b--;}a=(a*a)%mod;b/=2;}return t;}
ll inv(ll a,ll p){return qpow(a,p-2);}
int sum[maxn<<2],add[maxn<<2];
int a[maxn];
void pushUp(int rt)
{
    sum[rt]=max(sum[rt<<1],sum[rt<<1|1]);
}
void build(int l,int r,int rt)
{
    if(l==r)
    {
        sum[rt]=a[l];
        return ;
    }
    int m=(l+r)>>1;
    build(l,m,rt<<1);
    build(m+1,r,rt<<1|1);
    pushUp(rt);
}
void update(int L,int C,int l,int r,int rt)
{
    if(l==r)
    {
        sum[rt]=C;
        return ;
    }
    int m=(l+r)>>1;
    if(L<=m)    update(L,C,l,m,rt<<1);
    else update(L,C,m+1,r,rt<<1|1);
    pushUp(rt);
}
int query(int L,int R,int l,int r,int rt)
{
    if(L<=l&&r<=R)
    {
        return sum[rt];
    }
    int m=(l+r)>>1;
    int ans=0;
    if(L<=m)    ans=max(ans,query(L,R,l,m,rt<<1));
    if(R>m)     ans=max(ans,query(L,R,m+1,r,rt<<1|1));
    return ans;
}
int main()
{
    std::ios::sync_with_stdio(false);
    int n,m;
    while(cin>>n>>m)
    {
        for(int i=1;i<=n;i++)
        {
            cin>>a[i];
        }
        build(1,n,1);
        for(int i=0;i<m;i++)
        {
            char c;
            int a,b;
            cin>>c>>a>>b;
            if(c=='U')
                update(a,b,1,n,1);
            else if(c=='Q')
            {
                cout<<query(a,b,1,n,1)<<endl;
            }
        }

    }
    return 0;
}