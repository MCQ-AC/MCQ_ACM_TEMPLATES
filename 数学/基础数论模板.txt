//HDU 5446 求C(n,m)%(p1*p2*…pk)，其中pi为素数
/*
1.中国剩余定理（CRT）:
设m1,…，mk是两两互质的正整数，那么对于a1,…,ak来说，一次同余方程组x≡ai(modmi)，必有解唯一解为 x=∑(1~k) Mi*ai*Mi^(-1)(mod m)m=m1*m2*…mk，Mi=m/mi，Mi^(-1)为Mi对于模mi的逆.
*/
//逆元+快速乘+lucas+中国剩余定理
#include <iostream>
#include <cstdio>
#include <cstring>
using namespace std;
typedef long long ll;
const int N =1e5+10;
ll n,m,p[15],M,k;//M=p1*p2*…pk,p是小素数
ll mul(ll a,ll b,ll p) //快速乘取模，计算a*b%p
{
    ll res=0;
    while(b)
    {
        if(b&1) res =(res+a)%p;
        a=(a+a)%p;
        b>>=1;
    }
    return res;
}
ll qpow(ll a,ll b,ll p)//快速幂 a^b%p
{
    ll t=a%p,ans=1;
    while(b)
    {
        if(b&1)  ans=ans*t%p;
        t=t*t%p;
        b>>=1;
    }
    return ans;
}
ll inv(ll a,ll p)//逆元
{
    return qpow(a,p-2,p);
}
ll C(ll n,ll m,ll p) //求组合数C(n,m)%p
{
    if(m>n||n<0||m<0) return 0;
    if(m==0||n==m) return 1;
    if(m>n-m) m=n-m;
    ll ca=1,cb=1;
    for(ll i = 0; i<m; i++)
    {
        ca=ca*(n-i)%p;
        cb=cb*(m-i)%p;
    }
    return ca*inv(cb,p)%p;
}
ll Lucas(ll n,ll m,ll p)//大组合数C(n,m)%p
{
    if(m ==0) return 1;
    else return (C(n%p,m%p,p)*Lucas(n/p,m/p,p))%p;
}
ll china()//中国剩余定理
{
    ll ans=0;
    for(int i=1; i<=k; i++)
    {
        ans=(ans+mul(mul(Lucas(n,m,p[i]),M/p[i],M),inv(M/p[i],p[i]),M))%M;
    }
    return ans;
}
int main()
{
    ios::sync_with_stdio(false);
    int t;
    scanf("%d",&t);
    while(t--)
    {
        scanf("%lld%lld%lld",&n,&m,&k);
        for(int i=1; i<=k; i++)
        {
            scanf("%lld",&p[i]);
        }
        M=1;
        for(int i=1; i<=k; i++)
        {
            M*=p[i];
        }
        printf("%lld\n",china());
    }
    return 0;
}
