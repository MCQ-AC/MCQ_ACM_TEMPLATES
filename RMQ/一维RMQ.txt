/*
O(nlogn)预处理 O(1)查询
POJ 3264 查询区间最大值与最小值的差
*/
#include<cstdio>
#include<algorithm>
using namespace std;
const int maxn=50010;
int mm[maxn],dpMax[maxn][20],dpMin[maxn][20];
//初始化Rmq,b数组下标从1开始，从0开始简单修改
void initRmq(int n,int b[])  //O(nlogn)预处理
{
    mm[0]=-1;
    for(int i=1;i<=n;i++)
    {
        mm[i]=((i&(i-1))==0)?mm[i-1]+1:mm[i-1];
        dpMax[i][0]=b[i];
        dpMin[i][0]=b[i];
    }
    for(int j=1;j<=mm[n];j++)
    {
        for(int i=1;i+(1<<j)-1<=n;i++)
        {
            dpMax[i][j]=max(dpMax[i][j-1],dpMax[i+(1<<(j-1))][j-1]);
            dpMin[i][j]=min(dpMin[i][j-1],dpMin[i+(1<<(j-1))][j-1]);
        }
    }
}
//查询最大值 
int rmqMax(int x,int y)	//O(1)查询
{
    int k=mm[y-x+1];
    return max(dpMax[x][k],dpMax[y-(1<<k)+1][k]);
}
int rmqMin(int x,int y)
{
    int k=mm[y-x+1];
    return min(dpMin[x][k],dpMin[y-(1<<k)+1][k]);
}
int main()
{
    int n,q;
    while(~scanf("%d%d",&n,&q))
    {
        int b[maxn];
        for(int i=1;i<=n;i++)
        {
            scanf("%d",&b[i]);
        }
        initRmq(n,b);
        for(int i=0;i<q;i++)
        {
            int a,b;
            scanf("%d%d",&a,&b);
            printf("%d\n",rmqMax(a,b)-rmqMin(a,b));
        }
    }
    return 0;
}
