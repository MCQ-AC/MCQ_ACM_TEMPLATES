1.链接：https://ac.nowcoder.com/acm/contest/368/C


题意:在一共有n天，第i天如果有流星雨的话，会有
wi颗流星雨。
第i天有流星雨的概率是
p
i
。
如果第一天有流星雨了，那么第二天有流星雨的可能性是
p
2
+
P
，否则是
p
2
。
求n天后，流星雨颗数的期望。


第一行三个整数，n,a,b，其中n为天数,
P
=
a
/b
,第二行n个整数
w
i
。
接下来n行，每行两个整数，x,y，第i+2行表示第i天有流星雨的概率
p
i
=
x
/y
。
思路:设L[i]为第i天真正有流星雨的概率,那么L[i]=(L[i-1]*(p[i]+P)+(1-L[i-1])*p[i],注意除法的地方用逆元,最后每一天的概率乘以w[i]求和即为答案。复杂度O(nlogn)。
#include<bits/stdc++.h>
using namespace std;
#define inf 0x3f3f3f3f
#define ll long long
const int maxn=200005;
const int mod=1e9+7;
ll qpow(ll a,ll b){ll res=1;while(b){if(b&1) res=res*a%mod;a=a*a%mod;b>>=1;}return res;}
ll inv(ll a){return qpow(a,mod-2);}
ll w[maxn],L[maxn],p[maxn],P;
int main()
{
    std::ios::sync_with_stdio(false);
    ll n,a,b;
    cin>>n>>a>>b;
    P=a*inv(b)%mod;
    for(int i=1;i<=n;i++)
    {
        cin>>w[i];
    }
    for(int i=1;i<=n;i++)
    {
        ll x,y;
        cin>>x>>y;
        p[i]=x*inv(y)%mod;
        if(i==1) L[i]=p[i];
        else L[i]=((p[i]+P)%mod*L[i-1]%mod+(1-L[i-1]+mod)%mod*p[i]%mod)%mod;
    }
    ll ans=0;
    for(int i=1;i<=n;i++)
    {
        ans+=L[i]*w[i]%mod;
        ans%=mod;
    }
    cout<<ans<<endl;
    return 0;
}
