//洛谷p1015
例如：给定一个十进制数56，将56加65（即把56从右向左读），得到121是一个回文数。
又如：对于十进制数87：
STEP1：87+78=165
STEP2：165+561=726
STEP3：726+627=1353
STEP4：1353+3531=4884
在这里的一步是指进行了一次N进制的加法，上例最少用了4步得到回文数4884。
写一个程序，给定一个N进制数M，求最少经过几步可以得到回文数。如果在30步以内（包含30步）不可能得到回文数，则输出Impossible!
#include<bits/stdc++.h>
using namespace std;
#define ll long long
ll now;
ll n;
string m;
ll d(char c)
{
    if(c>='0'&&c<='9')
    {
        return c-'0';
    }
    else
        return c-'A'+10;
}
bool solve(ll a)
{
    ll t=0;
    for(ll i=a;i>0;i/=n)
    {
        t=t*n+i%n;
    }
    now=t+a;
    return a==t;
}
int main()
{
    std::ios::sync_with_stdio(false);
    while(cin>>n>>m)
    {
        now=0;
        int l=m.length()-1;
        for(int i=l;i>=0;i--)
        {
            now=now*n+d(m[i]);
        }
        int flag=0;
        for(int i=0;i<=30;i++)
        {
            if(solve(now))
            {
                flag=1;
                cout<<"STEP="<<i<<endl;
                break;
            }
        }
        if(!flag)
            cout<<"Impossible!"<<endl;
    }
    return 0;
}
