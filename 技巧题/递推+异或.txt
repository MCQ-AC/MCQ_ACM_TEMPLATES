牛客370I
题意:C0=0,C[i]=C[i-1]+A[i]^B[i]+∑(j=1~i-1) (A[i]^B[j]+A[j]^B[i])。给出数组A和B，求C的每项%1e9+7。
思路:手写出C[1]=A[1]^B[1],C[2]=A[1]^B[1]+A2^B[2]+A[2]^B[1]+A[1]^B[2]+A[1]^B[1]。可以发现C[n]=∑(i=1~n,j=1~n)A[i]^B[j]。所以按位处理二进制每一位上的数对这一位的贡献，设aa[30][2],bb[30][2]分别表示每一位0和1的个数，最后答案就是C[i]=∑(j=0~30) (aa[j][0]*bb[j][1]+aa[j][1]*bb[j][0])>>j。
#include<bits/stdc++.h>
using namespace std;
#define ll long long
const int maxn=100005;
const int mod=1e9+7;
ll a[maxn],b[maxn],aa[30][2],bb[30][2],c[maxn];
int main()
{
    std::ios::sync_with_stdio(false);
    int n;
    cin>>n;
    for(int i=1;i<=n;i++)
    {
        cin>>a[i];
    }
    for(int i=1;i<=n;i++)
    {
        cin>>b[i];
    }
    for(int i=1;i<=n;i++)
    {
        for(int j=0;j<30;j++)
        {
            aa[j][(a[i]>>j)&1]++;
            bb[j][(b[i]>>j)&1]++;
            c[i]+=(aa[j][1]*bb[j][0]+aa[j][0]*bb[j][1])<<j;
            c[i]%=mod;
        }
        cout<<c[i]<<" ";
    }
    return 0;
}
